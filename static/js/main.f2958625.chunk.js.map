{"version":3,"sources":["api-end-points.ts","api-helper.ts","redux/actionTypes.ts","components/Game/ScoreControl/ScoreControl.tsx","components/Game/SoundControl/SoundControl.tsx","redux/actions.ts","components/Game/TimeControl/TimeControl.tsx","components/Game/DoubleTrouble/icons/X.svg","components/Game/DoubleTrouble/ActiveGame/ActiveGame.tsx","components/Game/DoubleTrouble/EndScreen/EndScreen.tsx","components/Game/DoubleTrouble/icons/greenLines.svg","components/Game/DoubleTrouble/icons/redLines.svg","components/Game/DoubleTrouble/LaunchAnimation.tsx","components/Game/DoubleTrouble/PrepareForGame.tsx","components/Game/DoubleTrouble/DoubleTrouble.tsx","components/Game/Game.tsx","components/GamePage/desc-img/double-trouble-desc.png","components/GamePage/GamePage.tsx","components/GamesList/GamesList.tsx","components/LandingPage/LandingPage.tsx","Game-App.tsx","redux/reducers/allGames.ts","redux/reducers/currentGame.ts","redux/reducers/launchedGame.ts","redux/reducers/user.ts","redux/reducers/index.ts","redux/store.ts","index.tsx"],"names":["API_SERVER","USER_END_POINT","GAMES_END_POINT","SCORE_END_POINT","getDataFromServer","endPoint","a","fetch","then","data","json","catch","e","console","log","formData","FormData","append","user_id","score","game_id","method","body","response","SET_USER","SET_All_GAMES","SET_CURRENT_GAME","TOGGLE_VOLUME","SET_SCORE","START_GAME","STOP_GAME","FINISH_GAME","connect","state","launchedGame","props","className","toggleSound","type","useEffect","volume","onClick","currentGame","useState","seconds","setSeconds","gameTime","time","active","intervalCountDown","setInterval","clearTimeout","style","transition","toString","changeScore","content","payload","color","text","header","setHeader","button1","setButton1","button2","setButton2","headerElement","document","getElementById","blueOrRedText","Math","random","blueOrRedColor","setNewPage","newButton1Text","newButton2Text","newButton1Color","newButton2Color","handleButtonClick","event","target","parentElement","querySelector","textContent","toLowerCase","checkIfRight","elementOverlay","classList","remove","setTimeout","add","id","toUpperCase","src","X","alt","farewell_text","LaunchAnimation","countDown","setCountDown","intervalCounting","duration","clearInterval","redLines","greenLines","PrepareForGame","launch","setLaunch","timerToLaunch","startGame","to","name","user","stopGame","setFinishedTrue","gameActive","timer","finished","putScoreOnServer","allGames","setCurrentGame","intro_text","chosenGame","gamesArray","filter","obj","match","params","descImage","GamesList","map","game","setUser","email","setAllGames","length","GameApp","from","exact","path","component","LandingPage","GamePage","Game","initialState","combineReducers","action","createStore","rootReducer","rootElement","ReactDOM","render","store"],"mappings":"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","file":"static/js/main.f2958625.chunk.js","sourcesContent":["const API_SERVER = 'https://virtserver.swaggerhub.com/selfdecode.com/game-challenge/1.0.0/';\r\n\r\nexport const USER_END_POINT = `${API_SERVER}user/`;\r\n\r\nexport const GAMES_END_POINT = `${API_SERVER}game/`;\r\n\r\nexport const SCORE_END_POINT = `${API_SERVER}score/`","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nexport async function getDataFromServer(endPoint: string) {\r\n  return fetch(endPoint)\r\n    .then(data => data.json())\r\n    .catch(e => {\r\n      console.log(e);\r\n      return e;\r\n    });\r\n}\r\n\r\nexport async function putScoreOnServer(\r\n  endPoint:string,\r\n  data: {\r\n    user_id: string,\r\n    score: string,\r\n    game_id: string\r\n  }\r\n) {\r\n  const formData = new FormData();\r\n  formData.append('user_id', data.user_id);\r\n  formData.append('score', data.score);\r\n  formData.append('game_it', data.game_id);\r\n\r\n  return fetch(endPoint, {\r\n      method: 'PUT',\r\n      body: formData\r\n  }).then(response => response.json())\r\n}\r\n","export const SET_USER = 'SET_USER';\r\nexport const SET_All_GAMES = 'SET_All_GAMES';\r\nexport const SET_CURRENT_GAME = 'SET_CURRENT_GAME';\r\nexport const TOGGLE_VOLUME = 'TOGGLE_VOLUME';\r\nexport const SET_SCORE = 'SET_SCORE';\r\nexport const START_GAME = 'START_GAME';\r\nexport const STOP_GAME = 'STOP_GAME';\r\nexport const FINISH_GAME = 'FINISH_GAME';","import './ScoreControl.css';\r\n\r\nimport React, { ReactElement } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nconst ScoreControl = (props:{\r\n  launchedGame: ILaunchedGame;\r\n}): ReactElement => {\r\n  \r\n\r\n  return(\r\n    <div className=\"score-control\">\r\n      <div className=\"score-control-content\">\r\n        <div className=\"score-text\">score</div>\r\n        <div className=\"score-display\">\r\n          {props.launchedGame.score}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (\r\n  state: {\r\n    launchedGame: ILaunchedGame;\r\n  }\r\n) => {\r\n  const { launchedGame } = state;\r\n  return { launchedGame };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps, \r\n  {}\r\n)(ScoreControl);","import './SoundControl.css';\r\n\r\nimport React, { ReactElement, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { toggleSound } from '../../../redux/actions';\r\n\r\nconst SoundControl = (props:{\r\n  toggleSound: () => void;\r\n  launchedGame: ILaunchedGame;\r\n}): ReactElement => {\r\n\r\n  useEffect(()=>{\r\n    // if sound element exist line below should be implemented\r\n    // props.launchedGame.volume ? unMutePage() : mutePage();\r\n  }, [props.launchedGame.volume]);\r\n  \r\n  return(\r\n    <div className=\"sound-control\">\r\n      <div onClick={props.toggleSound} className={`sound-control-button${props.launchedGame.volume ? ' sound-control-button-active' : ''}`}>\r\n        {\r\n          props.launchedGame.volume\r\n          ?\r\n          <i className=\"fas fa-volume-up\"></i>\r\n          : \r\n          <i className=\"fas fa-volume-mute\"></i>\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (\r\n  state: {\r\n    launchedGame: ILaunchedGame;\r\n  }\r\n) => {\r\n  const { launchedGame } = state;\r\n  return { launchedGame };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps, \r\n  {\r\n    toggleSound\r\n  }\r\n)(SoundControl);","import {\r\n  FINISH_GAME,\r\n  SET_All_GAMES,\r\n  SET_CURRENT_GAME,\r\n  SET_SCORE,\r\n  SET_USER,\r\n  START_GAME,\r\n  STOP_GAME,\r\n  TOGGLE_VOLUME,\r\n} from './actionTypes';\r\n\r\nexport const setUser = (content: User) : {\r\n  type: string,\r\n  payload: User\r\n} => ({\r\n  type: SET_USER,\r\n  payload: {\r\n    id: content.id,\r\n    name: content.name,\r\n    email: content.email\r\n  }\r\n});\r\n\r\nexport const setAllGames = (content: IGame[]) : {\r\n  type: string,\r\n  payload: IGame[]\r\n} => ({\r\n  type: SET_All_GAMES,\r\n  payload: content\r\n});\r\n\r\nexport const setCurrentGame = (content: IGame) : {\r\n  type: string,\r\n  payload: IGame\r\n} => ({\r\n  type: SET_CURRENT_GAME,\r\n  payload: {\r\n    id: content.id,\r\n    name: content.name,\r\n    intro_text: content.intro_text,\r\n    farewell_text: content.farewell_text,\r\n    time: content.time\r\n  }\r\n});\r\n\r\nexport const toggleSound = () : {\r\n  type: string\r\n} => ({\r\n  type: TOGGLE_VOLUME\r\n});\r\n\r\nexport const changeScore = (content: ILaunchedGame) : {\r\n  type: string;\r\n  payload: ILaunchedGame\r\n} => ({\r\n  type: SET_SCORE,\r\n  payload: content\r\n});\r\n\r\nexport const startGame = () : {\r\n  type: string;\r\n} => ({\r\n  type: START_GAME\r\n});\r\n\r\nexport const stopGame = () : {\r\n  type: string;\r\n} => ({\r\n  type: STOP_GAME\r\n});\r\n\r\nexport const setFinishedTrue = () : {\r\n  type: string;\r\n} => ({\r\n  type: FINISH_GAME\r\n});","import './TimeControl.css';\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport { ReactElement } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nconst TimeControl = (\r\n  props:{\r\n    currentGame: IGame\r\n    active: boolean\r\n  }\r\n): ReactElement => {\r\n  const [seconds, setSeconds] = useState(0);\r\n  let gameTime = props.currentGame.time - seconds;\r\n\r\n  useEffect(() => {\r\n\r\n    if(props.active){\r\n      const intervalCountDown = setInterval(() => {\r\n        setSeconds(seconds => seconds + 1)\r\n      }, 1000);\r\n\r\n      return () => {\r\n        gameTime = props.currentGame.time;\r\n        setSeconds(0);\r\n        clearTimeout(intervalCountDown)\r\n      };\r\n    }\r\n  },[props.active]);\r\n\r\n  const sliderAnimation = () => {\r\n    const sliderTransition = props.active ? \r\n      {\r\n        transition: `all ${props.currentGame.time.toString()}s linear`\r\n      } : {\r\n        transition: '0s'\r\n      }\r\n\r\n    return sliderTransition\r\n  }\r\n\r\n  const generateSliderClassName = () => {\r\n    const sliderClassName = props.active ? 'time-control-slider time-control-slider-hidden' : 'time-control-slider';\r\n\r\n    return sliderClassName;\r\n  }\r\n\r\n  return(\r\n  <div className=\"time-control\">\r\n    <div className=\"time-control-top\">\r\n      <div className={generateSliderClassName()}>\r\n        <div style={sliderAnimation()} className=\"slider-bar\"></div>\r\n      </div>\r\n    </div>\r\n    <div className=\"time-control-bottom\">\r\n      <div className=\"time-control-bottom-content\">\r\n        <div className=\"time-control-text\">time</div>\r\n        <div className=\"time-control-number\">\r\n          {gameTime}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n)}\r\n\r\nconst mapStateToProps = (\r\n  state: {\r\n    currentGame: IGame;\r\n  }\r\n) => {\r\n  const { currentGame } = state;\r\n  return { currentGame };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps, \r\n  {}\r\n)(TimeControl);","export default __webpack_public_path__ + \"static/media/X.63627aa8.svg\";","import './ActiveGame.css';\r\n\r\nimport React, { ReactElement, useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { changeScore } from '../../../../redux/actions';\r\nimport X from '../icons/X.svg';\r\n\r\nconst ActiveGame = (props:{\r\n  launchedGame: ILaunchedGame;\r\n  changeScore: (content: ILaunchedGame) => void;\r\n}): ReactElement => {\r\n  const [header, setHeader] = useState({color: '', text: ''});\r\n  const [button1, setButton1] = useState({color: '', text: ''});\r\n  const [button2, setButton2] = useState({color: '', text: ''});\r\n  const headerElement = document.getElementById('header');\r\n  \r\n  const blueOrRedText = () => {\r\n    return Math.random() >= 0.5 ? 'blue' : 'red'\r\n  }\r\n  const blueOrRedColor = () => {\r\n    return Math.random() >= 0.5 ? '#0081FF' : '#FF0000'\r\n  }\r\n\r\n  useEffect(()=>{\r\n    setNewPage();\r\n  }, []);\r\n\r\n  const checkIfRight = (event: React.MouseEvent<HTMLElement>) => {\r\n    const buttonContent = (event.target as Element).parentElement?.querySelector('.active-game-button-text')?.textContent?.toLowerCase();\r\n    const headerColor = headerElement?.style.color === 'rgb(0, 129, 255)' ? 'blue' : 'red';\r\n\r\n    return buttonContent === headerColor ? true : false ;\r\n  }\r\n\r\n  const setNewPage = ()=>{\r\n    const newButton1Text = blueOrRedText();\r\n    const newButton2Text = newButton1Text === 'blue' ? 'red': 'blue';\r\n    const newButton1Color = blueOrRedColor();\r\n    const newButton2Color = newButton1Color === '#FF0000' ? '#0081FF' : '#FF0000';\r\n    \r\n    setHeader({text: blueOrRedText(), color: blueOrRedColor()});\r\n    setButton1({text: newButton1Text, color: newButton1Color});\r\n    setButton2({text: newButton2Text, color: newButton2Color});\r\n  };\r\n  \r\n  const handleButtonClick = (event: React.MouseEvent<HTMLElement>) => {\r\n    if(!checkIfRight(event)){\r\n      const elementOverlay = (event.target as Element).parentElement?.querySelector('.overlay');\r\n      elementOverlay?.classList.remove('hidden');\r\n      \r\n      setTimeout(()=>{\r\n        elementOverlay?.classList.add('hidden');\r\n\r\n        setNewPage()\r\n        if (props.launchedGame.score > 0){\r\n          props.changeScore({\r\n            ...props.launchedGame,\r\n            score: props.launchedGame.score - 1\r\n          })\r\n        }\r\n      }, 500);\r\n      \r\n      return\r\n    }\r\n    \r\n    setNewPage()\r\n    props.changeScore({\r\n      ...props.launchedGame,\r\n      score: props.launchedGame.score + 1\r\n    })\r\n  }\r\n\r\n  return(\r\n    <div className=\"active-game\">\r\n      <div id='header' style={{color: header.color}} className=\"active-game-header\">{header.text.toUpperCase()}</div>\r\n      <div className=\"active-game-buttons\">\r\n        <button id='btn1' onClick={handleButtonClick} style={{color: button1.color}} className=\" active-game-button\">\r\n          <p className=\"absolute active-game-header active-game-button-text\">\r\n            {button1.text.toUpperCase()}\r\n          </p>\r\n          <div className=\"absolute overlay hidden\">\r\n            <img className=\"absolute\" src={X} alt=\"\"/>\r\n            </div>\r\n        </button>\r\n        <button id='btn2' onClick={handleButtonClick} style={{color: button2.color}} className=\"active-game-button\">\r\n          <p className=\"absolute active-game-header active-game-button-text\">\r\n            {button2.text.toUpperCase()}\r\n          </p>\r\n          <div className=\"absolute overlay hidden\">\r\n            <img className=\"absolute\" src={X} alt=\"\"/>\r\n            </div>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (\r\n  state: {\r\n    launchedGame: ILaunchedGame;\r\n  }\r\n) => {\r\n  const { launchedGame } = state;\r\n  return { launchedGame };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps, \r\n  {\r\n    changeScore\r\n  }\r\n)(ActiveGame);","import './EndScreen.css';\r\n\r\nimport React, { ReactElement } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nconst EndScreen = (\r\n  props: {\r\n    farewell_text: string;\r\n    score: number;\r\n  }): ReactElement =>{\r\n  return (\r\n    <div className=\"game-double-trouble-end\">\r\n      <div className=\"game-end-header\">\r\n        Thank you!\r\n      </div>\r\n      <div className=\"score-box\">Your score is {props.score}</div>\r\n      <div className=\"farewell-text\">{props.farewell_text}</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (\r\n  state: {\r\n    currentGame: {\r\n      farewell_text:string\r\n    };\r\n    launchedGame: {\r\n      score: number\r\n    };\r\n  }\r\n) => {\r\n  const { currentGame, launchedGame } = state;\r\n  const {score} = launchedGame;\r\n  const {farewell_text} = currentGame;\r\n  return { farewell_text, score };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps, \r\n  {}\r\n)(EndScreen);","export default __webpack_public_path__ + \"static/media/greenLines.1e58080d.svg\";","export default __webpack_public_path__ + \"static/media/redLines.93fb6cf3.svg\";","import React, { useEffect, useState } from 'react';\r\nimport { ReactElement } from 'react';\r\n\r\nimport greenLines from './icons/greenLines.svg';\r\nimport redLines from './icons/redLines.svg';\r\n\r\nconst LaunchAnimation = (props: { duration: number }): ReactElement => {\r\n  const [countDown, setCountDown] = useState(8);\r\n  useEffect(() => {\r\n    const intervalCounting = setInterval(() => {\r\n      if (countDown > 0) {\r\n        const newCountDown = countDown - 1;\r\n        setCountDown(newCountDown);\r\n      }\r\n    }, props.duration/8);\r\n\r\n    return () => {\r\n      clearInterval(intervalCounting);\r\n    };\r\n  }, [countDown]);\r\n\r\n  switch (countDown) {\r\n    case 8:\r\n      return (\r\n        <div className=\"animation\">\r\n          <img src={redLines} alt=\"\" className=\"lines hidden\" />\r\n          <div className=\"lines-cover\"></div>\r\n\r\n          <div className=\"play-button-started\">\r\n            <div className=\"time-count-down\">3</div>\r\n            <div className=\"time-count-down hidden\">2</div>\r\n          </div>\r\n        </div>\r\n      );\r\n    case 7:\r\n      return (\r\n        <div className=\"animation\">\r\n          <img src={redLines} alt=\"\" className=\"lines\" />\r\n          <div className=\"lines-cover\"></div>\r\n\r\n          <div className=\"play-button-started\">\r\n            <div className=\"time-count-down\">3</div>\r\n            <div className=\"time-count-down hidden\">2</div>\r\n          </div>\r\n        </div>\r\n      );\r\n    case 6:\r\n      return (\r\n        <div className=\"animation\">\r\n          <img src={redLines} alt=\"\" className=\"lines hidden\" />\r\n          <div className=\"lines-cover\"></div>\r\n\r\n          <div className=\"play-button-started\">\r\n            <div className=\"time-count-down hidden\">3</div>\r\n            <div className=\"time-count-down\">2</div>\r\n          </div>\r\n        </div>\r\n      );\r\n    case 5:\r\n      return (\r\n        <div className=\"animation\">\r\n          <img src={redLines} alt=\"\" className=\"lines\" />\r\n          <div className=\"lines-cover\"></div>\r\n\r\n          <div className=\"play-button-started\">\r\n            <div className=\"time-count-down hidden\">1</div>\r\n            <div className=\"time-count-down\">2</div>\r\n          </div>\r\n        </div>\r\n      );\r\n\r\n    case 4:\r\n      return (\r\n        <div className=\"animation\">\r\n          <img src={redLines} alt=\"\" className=\"lines hidden\" />\r\n          <div className=\"lines-cover\"></div>\r\n\r\n          <div className=\"play-button-started\">\r\n            <div className=\"time-count-down\">1</div>\r\n            <div className=\"time-count-down hidden\">2</div>\r\n          </div>\r\n        </div>\r\n      );\r\n    case 3:\r\n      return (\r\n        <div className=\"animation\">\r\n          <img src={redLines} alt=\"\" className=\"lines\"/>\r\n          <div className=\"lines-cover\"></div>\r\n\r\n          <div className=\"play-button-started\">\r\n            <div className=\"time-count-down\">1</div>\r\n            <div className=\"time-count-down hidden\">0</div>\r\n          </div>\r\n        </div>\r\n      );\r\n    case 2:\r\n      return (\r\n        <div className=\"animation-end\">\r\n          <img src={greenLines} alt=\"\" className=\"lines-end hidden no-transition\" />\r\n          <div className=\"lines-cover-end\"></div>\r\n\r\n          <div className=\"play-button-started-end\">\r\n            <div className=\"time-count-down-end\">Go!</div>\r\n          </div>\r\n        </div>\r\n      );\r\n    case 1:\r\n      return (\r\n        <div className=\"animation-end\">\r\n          <img src={greenLines} alt=\"\" className=\"lines-end\" />\r\n          <div className=\"lines-cover-end\"></div>\r\n\r\n          <div className=\"play-button-started-end\">\r\n            <div className=\"time-count-down-end\">Go!</div>\r\n          </div>\r\n        </div>\r\n      );\r\n    default:\r\n      return (\r\n        <div className=\"animation-end\">\r\n          \r\n        </div>\r\n      );\r\n  }\r\n};\r\nexport default LaunchAnimation;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { ReactElement } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport LaunchAnimation from './LaunchAnimation';\r\n\r\n\r\ninterface IPrepareForGame {\r\n  startGame: () => void;\r\n  name: string;\r\n  active: boolean;\r\n}\r\nconst PrepareForGame = (props: IPrepareForGame): ReactElement => {\r\n  const [launch, setLaunch] = useState(false);\r\n  const launchTime = 6000;\r\n\r\n  useEffect(() => {\r\n    if(launch){\r\n      const timerToLaunch = setTimeout(() => {\r\n        props.startGame()\r\n      }, launchTime);\r\n\r\n      return () => {\r\n        clearTimeout(timerToLaunch)\r\n      };\r\n    }\r\n  },[launch]);\r\n\r\n  const setLaunchToTrue = () => {\r\n    setLaunch(true)\r\n  }\r\n\r\n  if (props.active){\r\n    return(\r\n      <div className=\"prepare-for-game\">\r\n        <div className=\"play-wrapper\">\r\n          <div className=\"play-button\">\r\n          </div>\r\n        </div>\r\n      </div>\r\n      )\r\n  } else {\r\n    return(\r\n        !launch ? \r\n          <div className=\"prepare-for-game\">\r\n            <div className=\"play-wrapper\">\r\n                <div onClick={setLaunchToTrue} className=\"play-button\">\r\n                  <i className=\"fas fa-play\"></i>\r\n                </div>\r\n            </div>\r\n            <div className=\"start-text\">Start the game</div>\r\n            <Link\r\n              className=\"back-to-desc\"\r\n              to={`/${props.name}`}\r\n            >\r\n              Instructions\r\n            </Link>\r\n          </div>\r\n        :\r\n        <div className=\"prepare-for-game\">\r\n          <LaunchAnimation duration={launchTime}/>\r\n        </div>\r\n      )\r\n  }\r\n  \r\n}\r\nexport default PrepareForGame","import './DoubleTrouble.css';\r\n\r\nimport React, { useEffect } from 'react';\r\nimport { ReactElement } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\n\r\nimport { SCORE_END_POINT } from '../../../api-end-points';\r\nimport { putScoreOnServer } from '../../../api-helper';\r\nimport { setFinishedTrue, startGame, stopGame } from '../../../redux/actions';\r\nimport ScoreControl from '../ScoreControl/ScoreControl';\r\nimport SoundControl from '../SoundControl/SoundControl';\r\nimport TimeControl from '../TimeControl/TimeControl';\r\nimport ActiveGame from './ActiveGame/ActiveGame';\r\nimport EndScreen from './EndScreen/EndScreen';\r\nimport PrepareForGame from './PrepareForGame';\r\n\r\ninterface IDoubleTroubleProps extends RouteComponentProps<{ name: string}> {\r\n  user: User;\r\n  currentGame: IGame;\r\n  launchedGame: ILaunchedGame;\r\n  startGame: () => void;\r\n  stopGame: () => void;\r\n  setFinishedTrue: () => void;\r\n}\r\nconst DoubleTrouble = (props: IDoubleTroubleProps): ReactElement => {\r\n  \r\n  useEffect(()=>{\r\n    if (props.launchedGame.gameActive){\r\n      const timer = setTimeout(() => {\r\n        props.stopGame();\r\n        props.setFinishedTrue();\r\n      }, props.currentGame.time*1000);\r\n\r\n      return () => clearTimeout(timer);\r\n    }\r\n  },[props.launchedGame.gameActive]);\r\n  \r\n  useEffect(()=>{\r\n    if(props.launchedGame.finished){\r\n      putScoreOnServer(SCORE_END_POINT, {\r\n        user_id: props.user.id,\r\n        score: props.launchedGame.score.toString(),\r\n        game_id: props.currentGame.id\r\n      })\r\n    }\r\n  },[props.launchedGame.finished]);\r\n\r\n  if(props.launchedGame.finished){\r\n    return (\r\n      <EndScreen/>\r\n    )\r\n  } else {\r\n\r\n    return (\r\n      <div className=\"game-double-trouble\">\r\n        <div className=\"game-double-trouble-body\">\r\n          {!props.launchedGame.gameActive ? \r\n            <PrepareForGame active={props.launchedGame.gameActive} startGame={props.startGame} name={props.currentGame.name}/> : \r\n            <ActiveGame/>\r\n          }\r\n        </div>\r\n        \r\n        <div className=\"game-double-trouble-aside\">        \r\n          <div className=\"aside-timer dark-gradient\">\r\n            <TimeControl active={props.launchedGame.gameActive}/>\r\n          </div>\r\n          <div className=\"aside-score dark-gradient\">\r\n            <ScoreControl/>\r\n          </div>\r\n          <div className=\"aside-sound dark-gradient\">\r\n            <SoundControl/>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n};\r\n\r\nconst mapStateToProps = (\r\n  state: {\r\n    user: User;\r\n    currentGame: IGame;\r\n    launchedGame: ILaunchedGame;\r\n  }\r\n) => {\r\n  const { user, currentGame, launchedGame } = state;\r\n  return { user, currentGame, launchedGame };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps, \r\n  {\r\n    startGame,\r\n    stopGame,\r\n    setFinishedTrue\r\n  }\r\n)(DoubleTrouble);","import React, { ReactElement } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router';\r\n\r\nimport DoubleTrouble from './DoubleTrouble/DoubleTrouble';\r\n\r\ninterface IGameProps extends RouteComponentProps<{ name: string}> {\r\n  currentGame: IGame;\r\n}\r\nconst Game = (props: IGameProps): ReactElement => {\r\n  \r\n  return (\r\n    <div className=\"game\">\r\n      {props.currentGame.name === 'Double Trouble'\r\n      ? <DoubleTrouble {...props}/>\r\n      : null}\r\n    </div>\r\n  )\r\n};\r\n\r\nconst mapStateToProps = (\r\n  state: {\r\n    currentGame: IGame;\r\n  }\r\n) => {\r\n  const { currentGame } = state;\r\n  return { currentGame };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps, \r\n  {}\r\n)(Game);","export default __webpack_public_path__ + \"static/media/double-trouble-desc.4b5a7933.png\";","import './GamePage.css';\r\n\r\nimport React, { ReactElement, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { GAMES_END_POINT } from '../../api-end-points';\r\nimport { getDataFromServer } from '../../api-helper';\r\nimport { setCurrentGame } from '../../redux/actions';\r\nimport descImage from './desc-img/double-trouble-desc.png';\r\n\r\ninterface IGamePageProps extends RouteComponentProps<{ name: string}> {\r\n  allGames: { gamesArray: IGame[] };\r\n  currentGame: IGame;\r\n  setCurrentGame: (content: IGame) => void;\r\n}\r\n\r\nconst GamePage = (props: IGamePageProps): ReactElement => {\r\n  useEffect(() => {\r\n\r\n    const chosenGame:IGame[] = props.allGames.gamesArray.filter(\r\n      obj => {\r\n        return obj.name === props.match.params.name\r\n      }\r\n    );\r\n    getDataFromServer(GAMES_END_POINT+chosenGame[0]?.id)\r\n    .then( response => {\r\n      props.setCurrentGame(response)\r\n    })\r\n    \r\n  }, []);\r\n  return (\r\n    <div className=\"game-page\">\r\n      <p className=\"game-page-header\">Instructions</p>\r\n      <p className=\"intro-text\">{props.currentGame.intro_text}</p>\r\n      {props.currentGame.name === \"Double Trouble\" ?\r\n      <img\r\n        className=\"desc-img\"\r\n        src={descImage}\r\n        alt=\"game-description\"/>\r\n      : null }\r\n        <Link className=\"btn-confirm\"to={`/${props.currentGame.name}/play`}>I understand</Link>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (\r\n  state: {\r\n    user: User;\r\n    allGames: { gamesArray: IGame[] };\r\n    currentGame: IGame;\r\n  }\r\n) => {\r\n  const { user, allGames, currentGame } = state;\r\n  return { user, allGames, currentGame };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps, \r\n  {\r\n    setCurrentGame\r\n  }\r\n)(GamePage);","import './GamesList.css';\r\n\r\nimport React, { ReactElement } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const GamesList = (props:{\r\n  allGames: {\r\n    gamesArray: IGame[]\r\n  }\r\n}): ReactElement => {\r\n  return (\r\n    <ul className=\"game-list\">\r\n      {props.allGames.gamesArray.map(\r\n        (game, id)=>{\r\n          const {name} = game;\r\n          return(\r\n            <li key={id} className=\"game-list-item\">\r\n              <Link className=\"game-list-item-link\"to={`/${name}`}>{name}</Link>\r\n            </li>\r\n          )\r\n        }\r\n      )}\r\n    </ul>\r\n  \r\n  )\r\n}\r\n","import './LandingPage.css';\r\n\r\nimport React, { ReactElement, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { GAMES_END_POINT, USER_END_POINT } from '../../api-end-points';\r\nimport { getDataFromServer } from '../../api-helper';\r\nimport { setAllGames, setUser } from '../../redux/actions';\r\nimport { GamesList } from '../GamesList/GamesList';\r\n\r\nconst LandingPage = (\r\n  props: {\r\n    setUser: (content: User) => void;\r\n    setAllGames: (content: IGame[]) => void;\r\n    user: User;\r\n    allGames: {\r\n      gamesArray: IGame[]\r\n    }\r\n  }\r\n): ReactElement => {  \r\n  useEffect(() => {\r\n    getDataFromServer(USER_END_POINT)\r\n    .then( response => {\r\n      props.setUser(response)\r\n    })\r\n    \r\n    getDataFromServer(GAMES_END_POINT)\r\n    .then( response => {\r\n      props.setAllGames(response)\r\n    })\r\n  }, []);\r\n\r\n  if(props.allGames.gamesArray[0]?.id.length > 0 && props.user.id.length > 0 )\r\n  {\r\n    return (\r\n      <div className=\"landing-page\">\r\n        <h1>Hello {props.user.name}</h1>\r\n        <div>What would you like to play today?</div>\r\n        <GamesList allGames={props.allGames}/>\r\n      </div>\r\n      )\r\n  } else {\r\n    return (\r\n      <div className=\"landing-page\"></div>\r\n    )\r\n  }\r\n};\r\n\r\nconst mapStateToProps = (\r\n  state: {\r\n    user: User;\r\n    allGames: {\r\n      gamesArray: IGame[];\r\n    }\r\n  }\r\n) => {\r\n  const { user, allGames } = state;\r\n  return { user, allGames };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps, \r\n  {\r\n    setUser,\r\n    setAllGames\r\n  }\r\n)(LandingPage);","import './Game-App.css';\r\n\r\nimport React, { FC, ReactElement } from 'react';\r\nimport { BrowserRouter as Router, Redirect, Route, Switch } from 'react-router-dom';\r\n\r\nimport Game from './components/Game/Game';\r\nimport GamePage from './components/GamePage/GamePage';\r\nimport LandingPage from './components/LandingPage/LandingPage';\r\n\r\nconst GameApp: FC = (): ReactElement => {\r\n  return (\r\n    \r\n    <div className=\"game-app\">\r\n      <div className=\"wrapper\">\r\n      <Router>\r\n        <Switch>\r\n          <Redirect from=\"/GameAppDeploy\" exact to=\"/\" />\r\n          <Route exact path=\"/\" component={LandingPage}/>\r\n          <Route exact path=\"/:name\" component={GamePage}/>\r\n          <Route path=\"/:name/play\" component={Game}/>\r\n        </Switch>\r\n      </Router>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GameApp;\r\n","import { SET_All_GAMES } from '../actionTypes';\r\n\r\nconst initialState =  {\r\n  gamesArray: [\r\n    {\r\n      id:'',\r\n      name:'',\r\n      intro_text:'',\r\n      farewell_text:'',\r\n      time: 0\r\n    }\r\n  ]\r\n};\r\n\r\nexport default function(\r\n    state = initialState,\r\n    action: {\r\n      type: string;\r\n      payload: IGame[];\r\n    }\r\n  ): {\r\n    gamesArray: Array<IGame>\r\n  } {\r\n  switch (action.type) {\r\n    case SET_All_GAMES: \r\n      return {\r\n        ...state,\r\n        gamesArray: action.payload\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { SET_CURRENT_GAME } from '../actionTypes';\r\n\r\nconst initialState =  {\r\n  id:'',\r\n  name:'',\r\n  intro_text:'',\r\n  farewell_text:'',\r\n  time: 0\r\n};\r\n\r\nexport default function(\r\n  state = initialState,\r\n  action: {\r\n    type: string,\r\n    payload: IGame\r\n  }): IGame {\r\n  switch (action.type) {\r\n    case SET_CURRENT_GAME: \r\n      return {\r\n        id: action.payload.id,\r\n        name: action.payload.name,\r\n        intro_text: action.payload.intro_text,\r\n        farewell_text: action.payload.farewell_text,\r\n        time: action.payload.time\r\n      };\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { FINISH_GAME, SET_SCORE, START_GAME, STOP_GAME, TOGGLE_VOLUME } from '../actionTypes';\r\n\r\nconst initialState = {\r\n  volume: true,\r\n  score: 0,\r\n  gameActive: false,\r\n  finished: false\r\n}\r\n\r\nexport default function(\r\n  state = initialState,\r\n  action: {\r\n    type: string,\r\n    payload: ILaunchedGame\r\n}) : ILaunchedGame {\r\n  switch (action.type) {\r\n    case TOGGLE_VOLUME: \r\n      return {\r\n        ...state,\r\n        volume: !state.volume\r\n      };\r\n    case SET_SCORE: \r\n      return {\r\n        ...state,\r\n        score: action.payload.score\r\n      };\r\n    case START_GAME: \r\n    return {\r\n      ...state,\r\n      gameActive: true\r\n    };\r\n    case STOP_GAME: \r\n    return {\r\n      ...state,\r\n      gameActive: false\r\n    };\r\n    case FINISH_GAME: \r\n    return {\r\n      ...state,\r\n      finished: true\r\n    };\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { SET_USER } from '../actionTypes';\r\n\r\nconst initialState = {\r\n  id: '',\r\n  name: '',\r\n  email: ''\r\n};\r\n\r\nexport default function(state = initialState, action: { type: string, payload: User }): User {\r\n  switch (action.type) {\r\n    case SET_USER: \r\n      return {\r\n        ...state,\r\n        id: action.payload.id,\r\n        name: action.payload.name,\r\n        email: action.payload.email\r\n      }\r\n    default: \r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\n\r\nimport allGames from './allGames';\r\nimport currentGame from './currentGame';\r\nimport launchedGame from './launchedGame';\r\nimport user from './user';\r\n\r\nexport default combineReducers({ user, currentGame, allGames, launchedGame });\r\n","import { createStore } from 'redux';\r\n\r\nimport rootReducer from './reducers';\r\n\r\nexport default createStore(rootReducer);\r\n","import './index.css';\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport GameApp from './Game-App';\r\nimport store from './redux/store';\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <GameApp />\r\n  </Provider>,\r\n  rootElement\r\n);\r\n"],"sourceRoot":""}